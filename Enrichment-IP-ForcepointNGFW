{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Enrichment IP - Forcepoint",
        "description": "This playbook checks if malicious IP address is blocked or unblocked by SMC firewall.",
        "mainSteps": [ "1. Fetches a list of potentially malicious IP addresses", "2. Enrich the incident with IP status information." ],
        "prerequisites": [
            "1. Forcepoint SMC Custom Connector needs to be deployed prior to the deployment of this playbook under the same resource group.",
            "2. Forcepoint SMC API Key should be known.[Refer here](http://www.websense.com/content/support/library/ngfw/v610/rfrnce/ngfw_6100_ug_smc-api_a_en-us.pdf )",
            "3. Forcepoint SMC Version number should be known. [Refer here](https://help.stonesoft.com/onlinehelp/StoneGate/SMC/)"
        ],
        "prerequisitesDeployTemplateFile": "../../ForcepointSMCApiConnector/azuredeploy.json",
        "lastUpdateTime": "2021-07-26T00:00:00.000Z",
        "entities": [ "IPs" ],
        "tags": [ "Enrichment" ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "Accenture"
        }
    },
    "parameters": {
        "PlaybookName": {
            "type": "String",
            "metadata": {
                "description": "Enter name for playbook without spaces. This playbook will enrich IP status information."
            }
        },
        "ForcepointSMCConnectorName": {
            "type": "string",
            "metadata": {
                "description": "Enter the name for your Forcepoint SMC Connector without spaces"
            }
        },
        "ForcepointSMCApiKey": {
            "type": "securestring",
            "metadata": {
                "description": "Enter the api key for smc login"
            }
        },
        "VersionNumber": {
            "type": "string",
            "metadata": {
                "description": "Enter SMC Api key Version Number"
            }
        }
    },
    "variables": {
        "Forcepoint_Connector": "[concat('ForcepointSMCApiConnector-',parameters('PlaybookName'))]",
        "azureSentinel_Connection": "[concat('azuresentienl-',parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('Forcepoint_Connector'))]",
                "[resourceId('Microsoft.Web/connections', variables('azureSentinel_Connection'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition":  {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Assign_IP_Address_to_Array": {
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPAddress",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "Asiign IP Address to IPAddress to reuse."
                        },
                        "Check_if_body_present_from_output": {
                            "actions": {
                                "Appending_IP_Address": {
                                    "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                                    "actions": {
                                        "Append_to_array_variable_to_IPaddress_variable": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPAddress",
                                                "value": "@items('Appending_IP_Address')?['Address']"
                                            },
                                            "description": "Appending IP address from incident to IPaddress variable"
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                },
                                "Check_Login_Status": {
                                    "runAfter": {
                                        "Login": [
                                            "Succeeded",
                                            "Failed",
                                            "Skipped",
                                            "TimedOut"
                                        ]
                                    },
                                    "cases": {
                                        "200_Success_OK": {
                                            "case": 200,
                                            "actions": {
                                                "Condition_to_check_if_needs_to_be_terminated": {
                                                    "actions": {
                                                        "Terminate_the_playbook_if_API_issue_occurred": {
                                                            "runAfter": {},
                                                            "type": "Terminate",
                                                            "inputs": {
                                                                "runError": {
                                                                    "message": "Having API issue in playbook"
                                                                },
                                                                "runStatus": "Failed"
                                                            },
                                                            "description": "Terminate the playbook if API issue occurred"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Create_HTML_table_for_IP_list_element": [
                                                            "Succeeded",
                                                            "TimedOut",
                                                            "Skipped",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Add_comment_to_incident_(V3)": {
                                                                "runAfter": {},
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                        "message": "<p>@{outputs('Forcepoint_Logo')}<strong>Forcepoint NGFW-Enrichment IP Address</strong><br>\nThe below IP address are found to be malicious and part of polices<br>\n<br>\n@{body('Create_HTML_table_for_Add_comment_to_incident')}<br>\n<br>\nIP address references elements<br>\n<br>\n@{body('Create_HTML_table_for_IP_list_element')}</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@variables('Terminate')",
                                                                    "APIError"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If",
                                                    "description": "Condition to check if needs to be terminated"
                                                },
                                                "Create_HTML_table_for_Add_comment_to_incident": {
                                                    "runAfter": {
                                                        "Remove_duplicates_from_IP_address_array": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Table",
                                                    "inputs": {
                                                        "columns": [
                                                            {
                                                                "header": "IP-Address",
                                                                "value": "@item()?['IPAddres']"
                                                            },
                                                            {
                                                                "header": "IP-Element-Name",
                                                                "value": "@item()?['Elementname']"
                                                            },
                                                            {
                                                                "header": "IP-Element-Type",
                                                                "value": "@item()?['Type']"
                                                            },
                                                            {
                                                                "header": "Policy-Name",
                                                                "value": "@item()?['Policy']"
                                                            },
                                                            {
                                                                "header": "Policy-Type",
                                                                "value": "@item()?['Policytype']"
                                                            },
                                                            {
                                                                "header": "IP-Status",
                                                                "value": "@item()?['IPStatus']"
                                                            },
                                                            {
                                                                "header": "Action",
                                                                "value": "@item()?['Action']"
                                                            }
                                                        ],
                                                        "format": "HTML",
                                                        "from": "@variables('Arrayforallactions')"
                                                    },
                                                    "description": "Creating a HTML table from all actions taken by IP address"
                                                },
                                                "Create_HTML_table_for_IP_list_element": {
                                                    "runAfter": {
                                                        "Create_HTML_table_for_Add_comment_to_incident": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Table",
                                                    "inputs": {
                                                        "columns": [
                                                            {
                                                                "header": "IP-Address",
                                                                "value": "@{item()?['']}@{item()?['IPAddres']}"
                                                            },
                                                            {
                                                                "header": "IP-Element-Name",
                                                                "value": "@item()?['Name']"
                                                            },
                                                            {
                                                                "header": "IP-Address-Exist-Element",
                                                                "value": "@item()?['Elementname']"
                                                            },
                                                            {
                                                                "header": "IP-Element-Type",
                                                                "value": "@item()?['Type']"
                                                            }
                                                        ],
                                                        "format": "HTML",
                                                        "from": "@variables('IP Address')"
                                                    }
                                                },
                                                "For_each_IP_Address": {
                                                    "foreach": "@variables('IPAddress')",
                                                    "actions": {
                                                        "Condition_to_check_Host_is_present_in_the_SMC_by_IP": {
                                                            "actions": {
                                                                "Append_to_element_variable_if_Host_is_present_by_IP_address": {
                                                                    "runAfter": {
                                                                        "Set_consolidate_variable_for_Host_by_IP_address": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "Elements",
                                                                        "value": "@variables('Consolidatevrbl')"
                                                                    },
                                                                    "description": "Append to element variable if Host is present by IP address"
                                                                },
                                                                "Set_consolidate_variable_for_Host_by_IP_address": {
                                                                    "runAfter": {},
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "Consolidatevrbl",
                                                                        "value": {
                                                                            "Element": "@{body('Get_Host')?['element']?[0]?['name']}",
                                                                            "IPaddress": "@{items('For_each_IP_Address')}",
                                                                            "Type": "Host"
                                                                        }
                                                                    },
                                                                    "description": "Set consolidate variable for Host by IP address"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Get_Host": [
                                                                    "Succeeded",
                                                                    "TimedOut",
                                                                    "Skipped",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@outputs('Get_Host')?['statusCode']",
                                                                            200
                                                                        ]
                                                                    },
                                                                    {
                                                                        "greater": [
                                                                            "@length(body('Get_Host')?['element'])",
                                                                            0
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "Get_Host": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "headers": {
                                                                    "Accept": "application/json",
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['ForcepointSMCApiConnector']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/@{encodeURIComponent(variables('SMC Api Version Number'))}/elements/host",
                                                                "queries": {
                                                                    "expand": true,
                                                                    "expose_etag": true,
                                                                    "filter": "@{items('For_each_IP_Address')}",
                                                                    "flatten": true
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "For_each_IP_list": [
                                                            "Succeeded",
                                                            "TimedOut",
                                                            "Skipped",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "For_each_IP_list": {
                                                    "foreach": "@body('Get_IP_List_Element')?['result']",
                                                    "actions": {
                                                        "Get_IP_address": {
                                                            "runAfter": {
                                                                "Login_2": [
                                                                    "Succeeded",
                                                                    "TimedOut",
                                                                    "Skipped",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "headers": {
                                                                    "Accept": "application/json",
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['ForcepointSMCApiConnector']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/@{encodeURIComponent(variables('SMC Api Version Number'))}/elements/ip_list/@{encodeURIComponent(last(split(items('For_each_IP_list')?['href'],'/')))}/ip_address_list"
                                                            }
                                                        },
                                                        "Login_2": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "authenticationkey": "@variables('SMC API Key')"
                                                                },
                                                                "headers": {
                                                                    "Accept": "application/json",
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['ForcepointSMCApiConnector']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/@{encodeURIComponent(variables('SMC Api Version Number'))}/login"
                                                            }
                                                        },
                                                        "Looping_IP_Address": {
                                                            "foreach": "@variables('IPAddress')",
                                                            "actions": {
                                                                "Check_the_result_length_from_filter_output": {
                                                                    "actions": {
                                                                        "Append_to_element_names_to_element_variable": {
                                                                            "runAfter": {
                                                                                "Set_consolidate_variable_if_IP_address_present_in_IP_list": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "AppendToArrayVariable",
                                                                            "inputs": {
                                                                                "name": "Elements",
                                                                                "value": "@variables('Consolidatevrbl')"
                                                                            },
                                                                            "description": "Append to element names to element variable"
                                                                        },
                                                                        "Set_consolidate_variable_if_IP_address_present_in_IP_list": {
                                                                            "runAfter": {},
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "Consolidatevrbl",
                                                                                "value": {
                                                                                    "Element": "@{items('For_each_IP_list')?['name']}",
                                                                                    "IPaddress": "@{items('Looping_IP_Address')}",
                                                                                    "Type": "IP list"
                                                                                }
                                                                            },
                                                                            "description": "Set consolidate variable if IP address present in IP list"
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "contains": [
                                                                                    "@body('Get_IP_address')?['ip']",
                                                                                    "@items('Looping_IP_Address')"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If",
                                                                    "description": "We will check for the result output is empty or exist in the policy rule. If result output is empty ,then there is no policy based on IP Address. And If result ouput is having some information related to IP Address then there is a policy with respect to IP"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Get_IP_address": [
                                                                    "Succeeded",
                                                                    "TimedOut",
                                                                    "Skipped",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "type": "Foreach",
                                                            "description": "Here we are looping each IP Address and check whether it is blocked or not "
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_IP_List_Element": [
                                                            "Succeeded",
                                                            "TimedOut",
                                                            "Skipped",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "Foreach",
                                                    "description": "For each IP list"
                                                },
                                                "For_each_element": {
                                                    "foreach": "@variables('Elements')",
                                                    "actions": {
                                                        "Condition_to_check_if_element_is_part_any_policy": {
                                                            "actions": {
                                                                "For_each_element_type": {
                                                                    "foreach": "@body('Find_IP_or_URL_in_SMC')?['element']",
                                                                    "actions": {
                                                                        "Bind_element_type": {
                                                                            "runAfter": {},
                                                                            "type": "Compose",
                                                                            "inputs": "@items('For_each_element_type')?['link']?[0]?['type']"
                                                                        },
                                                                        "Condition_to_check_element_type": {
                                                                            "actions": {
                                                                                "Append_to_all_actions_array_if_element_is_part_of_any_policy": {
                                                                                    "runAfter": {
                                                                                        "Set_consolidate_variable_if_element_is_part_of_any_policy": [
                                                                                            "Succeeded"
                                                                                        ]
                                                                                    },
                                                                                    "type": "AppendToArrayVariable",
                                                                                    "inputs": {
                                                                                        "name": "Arrayforallactions",
                                                                                        "value": "@variables('Consolidatevrbl')"
                                                                                    },
                                                                                    "description": "Append to all actions array if element is part of any policy"
                                                                                },
                                                                                "Set_consolidate_variable_if_element_is_part_of_any_policy": {
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "Consolidatevrbl",
                                                                                        "value": {
                                                                                            "Action": "Found in policy and IP address is blocked state",
                                                                                            "Elementname": "@{items('For_each_element')?['Element']}",
                                                                                            "IPAddres": "@{items('For_each_element')?['IPaddress']}",
                                                                                            "IPStatus": "Blocked",
                                                                                            "IncidentSeverity": "@{triggerBody()?['object']?['properties']?['severity']}",
                                                                                            "Policy": "@{items('For_each_element_type')?['name']}",
                                                                                            "Policytype": "@{items('For_each_element_type')?['link']?[0]?['type']}",
                                                                                            "Type": "@{items('For_each_element')?['Type']}"
                                                                                        }
                                                                                    },
                                                                                    "description": "Set consolidate variable if element is part of any policy"
                                                                                }
                                                                            },
                                                                            "runAfter": {
                                                                                "Bind_element_type": [
                                                                                    "Succeeded",
                                                                                    "TimedOut",
                                                                                    "Skipped",
                                                                                    "Failed"
                                                                                ]
                                                                            },
                                                                            "else": {
                                                                                "actions": {
                                                                                    "Append_to_IP_address_array_": {
                                                                                        "runAfter": {
                                                                                            "Set_consolidate_variable_if_IP_is_present_list_or_host": [
                                                                                                "Succeeded"
                                                                                            ]
                                                                                        },
                                                                                        "type": "AppendToArrayVariable",
                                                                                        "inputs": {
                                                                                            "name": "IP Address",
                                                                                            "value": "@variables('Consolidatevrbl')"
                                                                                        },
                                                                                        "description": "Append to IP address array "
                                                                                    },
                                                                                    "Set_consolidate_variable_if_IP_is_present_list_or_host": {
                                                                                        "runAfter": {},
                                                                                        "type": "SetVariable",
                                                                                        "inputs": {
                                                                                            "name": "Consolidatevrbl",
                                                                                            "value": {
                                                                                                "Elementname": "@{outputs('Bind_element_type')}",
                                                                                                "IPAddres": "@{items('For_each_element')?['IPaddress']}",
                                                                                                "Name": "@{items('For_each_element_type')?['name']}",
                                                                                                "Type": "@{items('For_each_element')?['Type']}"
                                                                                            }
                                                                                        },
                                                                                        "description": "Set consolidate variable if IP is present list or host"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "contains": [
                                                                                            "@outputs('Bind_element_type')",
                                                                                            "_policy"
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "If"
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "Foreach"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Find_IP_or_URL_in_SMC": [
                                                                    "Succeeded",
                                                                    "TimedOut",
                                                                    "Skipped",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@outputs('Find_IP_or_URL_in_SMC')?['statusCode']",
                                                                            200
                                                                        ]
                                                                    },
                                                                    {
                                                                        "greater": [
                                                                            "@length(body('Find_IP_or_URL_in_SMC')?['element'])",
                                                                            0
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If",
                                                            "description": "Condition to check if element is part any policy"
                                                        },
                                                        "Find_IP_or_URL_in_SMC": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "headers": {
                                                                    "Accept": "application/json",
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['ForcepointSMCApiConnector']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/@{encodeURIComponent(variables('SMC Api Version Number'))}/elements",
                                                                "queries": {
                                                                    "expand": true,
                                                                    "expose_etag": true,
                                                                    "filter": "@{items('For_each_element')?['Element']}",
                                                                    "flatten": true
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Remove_duplicates": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Get_IP_List_Element": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "headers": {
                                                            "Accept": "application/json",
                                                            "Content-Type": "application/json"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['ForcepointSMCApiConnector']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/@{encodeURIComponent(variables('SMC Api Version Number'))}/elements/ip_list",
                                                        "queries": {
                                                            "expand": true,
                                                            "expose_etag": true
                                                        }
                                                    }
                                                },
                                                "Remove_duplicates": {
                                                    "runAfter": {
                                                        "For_each_IP_Address": [
                                                            "Succeeded",
                                                            "TimedOut",
                                                            "Skipped",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@union(variables('Elements'),variables('Elements'))"
                                                },
                                                "Remove_duplicates_from_IP_address_array": {
                                                    "runAfter": {
                                                        "Remove_duplicates_from_all_actions_array": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@union(variables('IP Address'),variables('IP Address'))",
                                                    "description": "Remove duplicates from IP address array"
                                                },
                                                "Remove_duplicates_from_all_actions_array": {
                                                    "runAfter": {
                                                        "For_each_element": [
                                                            "Succeeded",
                                                            "TimedOut",
                                                            "Skipped",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@union(variables('Arrayforallactions'),variables('Arrayforallactions'))",
                                                    "description": "Remove duplicates from all actions array"
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {
                                            "Set_variable_to_login_unsuccessful": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "Error",
                                                    "value": "Error status code @{outputs('Login')['statusCode']}Unsuccessful login attempt."
                                                },
                                                "description": "When unsuccessful login atempt has done then we can bind the error to \"Error\" variable."
                                            },
                                            "Terminate_if_login_is_unsuccessful": {
                                                "runAfter": {
                                                    "Set_variable_to_login_unsuccessful": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Terminate",
                                                "inputs": {
                                                    "runError": {
                                                        "message": "@variables('Error')"
                                                    },
                                                    "runStatus": "Failed"
                                                },
                                                "description": "Terminate if login is unsuccessful login attempt"
                                            }
                                        }
                                    },
                                    "expression": "@outputs('Login')['statusCode']",
                                    "type": "Switch"
                                },
                                "Login": {
                                    "runAfter": {
                                        "Appending_IP_Address": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "authenticationkey": "@variables('SMC API Key')"
                                        },
                                        "headers": {
                                            "Accept": "application/json",
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['ForcepointSMCApiConnector']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/@{encodeURIComponent(variables('SMC Api Version Number'))}/login"
                                    },
                                    "description": "Before take an action against to any other api in Forcepoint SMC we need to do login."
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_append_elements_of_IP_address": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_variable_to_error_variable_if_IP_Address_are_not_available_from_sentinel": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "Error",
                                            "value": "IP Address not found from sentinel incident."
                                        },
                                        "description": "Binding the error to \"Error\" variable and pass it to incident comment."
                                    },
                                    "Terminate_if_there_are_no_inputs_from_sentinel": {
                                        "runAfter": {
                                            "Set_variable_to_error_variable_if_IP_Address_are_not_available_from_sentinel": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Terminate",
                                        "inputs": {
                                            "runError": {
                                                "message": "@variables('Error')"
                                            },
                                            "runStatus": "Failed"
                                        },
                                        "description": "Terminate the playbook if there are no inputs from sentinel"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Entities_-_Get_IPs')?['IPs']?[0]?['Address'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "description": "Form this condition, we will check like if body present in the sentinel incident or not and we will check the Ip address are available or not."
                        },
                        "Entities_-_Get_IPs": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            }
                        },
                        "Forcepoint_Logo": {
                            "runAfter": {
                                "Initialize_variable_to_Error": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "<img src=\"https://upload.wikimedia.org/wikipedia/en/b/b6/Forcepoint.jpg\" alt=\"ForcepointImage\" width=\"32\" height=\"32\">",
                            "description": "Forcepoint logo for comments "
                        },
                        "IP_List_Key": {
                            "runAfter": {
                                "Policy_Element_Key": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IP List Key",
                                        "type": "string"
                                    }
                                ]
                            },
                            "description": "We can store IP list key after adding ip list name "
                        },
                        "Initialize_variable_Terminate": {
                            "runAfter": {
                                "Forcepoint_Logo": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Terminate",
                                        "type": "string"
                                    }
                                ]
                            },
                            "description": " This holds the variable terminate to terminate the logic app "
                        },
                        "Initialize_variable_append_elements_of_IP_address": {
                            "runAfter": {
                                "Initialize_variable_Terminate": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Elements",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "Initialize variable append elements of IP address"
                        },
                        "Initialize_variable_for_IP_Address": {
                            "runAfter": {
                                "IP_List_Key": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IP Address",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "Binding Ip address to this IP address variable"
                        },
                        "Initialize_variable_to_Error": {
                            "runAfter": {
                                "Initialize_variable_to_SMC_Api_Version_Number": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Error",
                                        "type": "string"
                                    }
                                ]
                            },
                            "description": "To keep the error into this variable and pass it to wherever required."
                        },
                        "Initialize_variable_to_SMC_Api_Version_Number": {
                            "runAfter": {
                                "Initialize_variable_to_consolidate_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SMC Api Version Number",
                                        "type": "string",
                                        "value": "[parameters('VersionNumber')]"
                                    }
                                ]
                            },
                            "description": "To keep SMC Api version number. Forcepoint will update the SMC version every year"
                        },
                        "Initialize_variable_to_consolidate_variable": {
                            "runAfter": {
                                "Initialize_variable_to_keep_all_actions": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Consolidatevrbl",
                                        "type": "object"
                                    }
                                ]
                            },
                            "description": "To form a JSON object to pass it into Allaction variable"
                        },
                        "Initialize_variable_to_keep_all_actions": {
                            "runAfter": {
                                "Initialize_variable_for_IP_Address": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Arrayforallactions",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "To store IP address , severity , action to be taken into one array varriable and we can create a table."
                        },
                        "Policy_Element_Key": {
                            "runAfter": {
                                "SMC_API_Key": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Policy Element Key",
                                        "type": "string"
                                    }
                                ]
                            },
                            "description": "Policy element key is to store policy element key for add or remove policy rule"
                        },
                        "SMC_API_Key": {
                            "runAfter": {
                                "Assign_IP_Address_to_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SMC API Key",
                                        "type": "string",
                                        "value": "[parameters('ForcepointSMCApiKey')]"
                                    }
                                ]
                            },
                            "description": "SMC API Key is to store Api key for login"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "ForcepointSMCApiConnector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Forcepoint_Connector'))]",
                                "connectionName": "[variables('Forcepoint_Connector')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/customApis/',parameters('ForcepointSMCConnectorName'))]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureSentinel_Connection'))]",
                                "connectionName": "[variables('azureSentinel_Connection')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "MICROSOFT.WEB/CONNECTIONS",
            "apiVersion": "2016-06-01",
            "name": "[variables('Forcepoint_Connector')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/customApis/',parameters('ForcepointSMCConnectorName'))]"

                }
            }
        },
        {
            "type": "MICROSOFT.WEB/CONNECTIONS",
            "apiVersion": "2016-06-01",
            "name": "[variables('azureSentinel_Connection')]",
            "kind": "V1",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('azuresentinel_Connection')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]"

                }
            }
        }
    ],
    "outputs": {}
}
